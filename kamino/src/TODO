TLS Encryption
Couchbase Custom Logger

!!! Config Validation !!!

TODO REACT IF DATABASE FAILS TO SAVE DATA -> AND IMPLEMENT DELAY WHEN RETRYING TO SAVE THE DATA

TODO ADD COUCHBASE TEST INSERTION AND REMOVAL OF FOR EXAMPLE ACCESS_INTEGER TO TEST PERMISSIONS OF COUCHBASE USER

ADD Metadata Container which saves locations of e.g. blockbreakevent not in a global area container but in a world name specific container

Check permissions of user like creating scopes and if scope already exists if user still needs permission to create scope etc.

SUB INDEXING FOR DIFFERENT Metadata variables

# NAMING CONVENTIONS
name every new variable you want as new metadata pluginname-variablename // For plugins only so no event naming collisions occur
basic metadata that can be used with other events?
 -> entityIDs
 -> playerIDs
 -> itemIDs
 -> etc.

Reserved Names:
 -> entityIDs
 -> playerIDs
 -> itemIDs
 --> Maybe add restrictions in the plugin for those names so they only can be strings etc.

Store available user ids in different table?
GET ALL WORLD NAMES?
GET ALL PLAYER NAMES?

Maybe init Metadata with default container -> so if no container class is defined maybe get the type from the field and just create a BasicMetadataContainer (Set Metadata container) and create that instance

ERROR MESSAGES FOR WHEN Metadata Container Type Doesnt match the field type

THE METADATA SHOULD CONTAIN THE SERVER ID/IP? LATER ON

SAVING TO TEXT FILE IF THERE ARE EVENT BUCKETS IN THE QUEUE

Maybe refactor metadata bucket the static things are kinda ugly ngl

maybe thing about doing for everything else then the reserved metadata keys (entityI, playerID) a PLUGIN_NAME.KEY so e.g. kamino: KAMINO.position or e.g. projectcreate PROJECTCREATE.position