def osName = System.getProperty('os.name').toLowerCase(Locale.ROOT)

sourceCompatibility = JavaVersion.VERSION_1_8
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

sourceSets.main.java.srcDirs = ["src/"]

project.ext.mainClassName = "de.undefinedhuman.projectcreate.game.Game"
project.ext.assetsDir = new File("../assets")

jar {
    manifest {
        attributes 'Main-Class': project.mainClassName
    }
}

task run(dependsOn: classes, type: JavaExec) {
    main = project.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = project.assetsDir
    setIgnoreExitValue(true)
}

task debug(dependsOn: classes, type: JavaExec) {
    main = project.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = project.assetsDir
    setIgnoreExitValue(true)
    debug = true
}

task dist(type: Jar) {
    archiveFileName = "game.jar"

    from files(sourceSets.main.output.classesDirs)
    from files(sourceSets.main.output.resourcesDir)
    from { configurations.compile.collect { zipTree(it) } }
    from files(project.assetsDir)

    manifest {
        attributes 'Main-Class': project.mainClassName
    }
}

dist.dependsOn classes