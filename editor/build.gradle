sourceCompatibility = JavaVersion.VERSION_17
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

sourceSets.main.java.srcDirs = ["src/"]
sourceSets.test.java.srcDirs = ["test/"]

project.ext.mainClassName = "de.undefinedhuman.projectcreate.editor.Main"
project.ext.assetsDir = new File("../assets")
sourceSets.main.resources.srcDirs = [ project.assetsDir ]

test {
    useJUnitPlatform()
    workingDir = project.assetsDir
}

dependencies {
    testImplementation('org.junit.jupiter:junit-jupiter-api:5.7.2')
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.7.2')
}

task run(dependsOn: classes, type: JavaExec) {
    main = project.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = project.assetsDir
    setIgnoreExitValue(true)
}

task debug(dependsOn: classes, type: JavaExec) {
    main = project.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = project.assetsDir
    setIgnoreExitValue(true)
    debug = true
}

task dist(type: Jar) {
    from files(sourceSets.main.output.classesDirs)
    from files(sourceSets.main.output.resourcesDir)
    from { configurations.compile.collect { zipTree(it) } }
    from files(project.assetsDir);

    manifest {
        attributes 'Main-Class': project.mainClassName
    }
}

dist.dependsOn classes
