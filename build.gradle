plugins {
    id 'jacoco'
    id "org.sonarqube" version "3.0"
    id "org.hidetake.ssh" version "2.9.0"
}

sonarqube {
    properties {
        property "sonar.sourceEncoding", "UTF-8"
    }
}

version = '0.0.0'

task setVersion {
    group = 'Versioning'
    description = "Sets the version to the new version specified with -PnewVersion=\'x.x.x\'"
    doLast {
        if (project.hasProperty('newVersion')) {
            println 'Set Project to new Version ' + newVersion
            String s = buildFile.getText().replaceFirst("version = '$version'", "version = '" + newVersion + "'")
            buildFile.setText(s)
        }
    }
}

allprojects {
    apply plugin: 'jacoco'
    apply plugin: 'org.sonarqube'
    apply plugin: 'idea'
    apply plugin: 'maven-publish'

    ext {
        appName = "Project Create"
        gdxVersion = '1.10.0'
        kryoVersion = '2.22.0-RC1'
        flatLafVersion = '0.36'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        google()
        gradlePluginPortal()
        maven {
            url "https://gitlab.playprojectcreate.com/api/v4/projects/2/packages/maven"
            credentials(HttpHeaderCredentials) {
                name = 'Private-Token'
                value = gitLabPrivateToken
            }
            authentication {
                header(HttpHeaderAuthentication)
            }
        }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
        exclusiveContent {
            forRepository {
                maven {
                    url = uri("https://jitpack.io")
                }
            }
            filter {
                includeModule("com.github.Marcono1234", "gson-record-type-adapter-factory")
            }
        }
    }

}

subprojects {
    apply plugin: "java"
}

project(":game") {
    dependencies {
        implementation project(":engine")
        implementation project(":core")

        implementation "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion"
        implementation "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-desktop"
        implementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
        implementation "com.badlogicgames.gdx:gdx-tools:$gdxVersion"
        implementation group: 'com.esotericsoftware', name: 'kryonet', version: "$kryoVersion"
    }
}

project(":core") {
    dependencies {
        implementation project(":engine")

        implementation "com.badlogicgames.gdx:gdx-tools:$gdxVersion"
        implementation "com.badlogicgames.gdx:gdx:$gdxVersion"
        implementation group: 'com.esotericsoftware', name: 'kryonet', version: "$kryoVersion"

        testImplementation("org.assertj:assertj-core:3.19.0")
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
    }
}

project(":server") {
    dependencies {
        implementation project(":engine")
        implementation project(":core")

        implementation 'com.github.Marcono1234:gson-record-type-adapter-factory:0.2.0'
        implementation 'org.lz4:lz4-pure-java:1.8.0'
        implementation 'com.google.code.gson:gson:2.9.0'
        implementation "com.badlogicgames.gdx:gdx-backend-headless:$gdxVersion"
        implementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
        implementation group: 'com.esotericsoftware', name: 'kryonet', version: "$kryoVersion"
        implementation 'com.couchbase.client:java-client:3.2.5'
    }
}

project(":kamino") {
    apply plugin: "java-library"
    dependencies {
        implementation project(":server")

        // compileOnly 'com.playprojectcreate:server:0.0.2'
        implementation 'org.lz4:lz4-pure-java:1.8.0'
        implementation 'com.google.code.gson:gson:2.9.0'
        implementation 'com.couchbase.client:java-client:3.2.5'
    }
}

project(":engine") {
    dependencies {
        implementation "com.badlogicgames.gdx:gdx-tools:$gdxVersion"
        implementation "com.badlogicgames.gdx:gdx:$gdxVersion"
        implementation "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-desktop"
        implementation group: 'com.esotericsoftware', name: 'kryonet', version: "$kryoVersion"
        implementation group: 'com.github.kerner1000', name: 'javapng', version: '2.1.2'

        implementation "com.formdev:flatlaf:$flatLafVersion"

        testImplementation("org.assertj:assertj-core:3.19.0")
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
    }
}

project(":editor") {
    dependencies {
        implementation project(":engine")
        implementation project(":core")

        implementation "com.badlogicgames.gdx:gdx-backend-lwjgl:$gdxVersion"
        implementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
        implementation "com.badlogicgames.gdx:gdx-tools:$gdxVersion"
        implementation "com.badlogicgames.gdx:gdx:$gdxVersion"
        implementation "com.formdev:flatlaf:$flatLafVersion"
        implementation 'com.formdev:flatlaf-intellij-themes:1.2'
    }
}

project(":updater") {
    dependencies {
        implementation project(":engine")

        implementation "com.badlogicgames.gdx:gdx-backend-headless:$gdxVersion"
        implementation 'org.jsoup:jsoup:1.13.1'
        implementation "com.formdev:flatlaf:$flatLafVersion"
    }
}

project(":launcher") {
    dependencies {
        implementation project(":engine")
        implementation project(":updater")

        implementation "com.badlogicgames.gdx:gdx-backend-headless:$gdxVersion"
        implementation "com.formdev:flatlaf:$flatLafVersion"
        implementation 'com.formdev:flatlaf-extras:1.1.1'
        implementation 'com.formdev:svgSalamander:1.1.2.4'
        implementation 'com.github.oshi:oshi-core:5.7.1'
    }
}